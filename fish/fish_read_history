- cmd: function fish_prompt\nset -l last_command_status $status\nset -l cwd\n\nif test "$theme_short_path" = 'yes'\nset cwd (basename (prompt_pwd))\nelse\nset cwd (prompt_pwd)\nend\n\nset -l fish "⋊>"\nset -l ahead "↑"\nset -l behind "↓"\nset -l diverged "⥄ "\nset -l dirty "⨯"\nset -l none "◦"\n\nset -l normal_color (set_color normal)\nset -l success_color (set_color $fish_pager_color_progress ^/dev/null; or set_color cyan)\nset -l error_color (set_color $fish_color_error ^/dev/null; or set_color red --bold)\nset -l directory_color (set_color $fish_color_quote ^/dev/null; or set_color brown)\nset -l repository_color (set_color $fish_color_cwd ^/dev/null; or set_color green)\n\nif test $last_command_status -eq 0\necho -n -s $success_color $fish $normal_color\nelse\necho -n -s $error_color $fish $normal_color\nend\n\nif git_is_repo\nif test "$theme_short_path" = 'yes'\nset root_folder (command git rev-parse --show-toplevel ^/dev/null)\nset parent_root_folder (dirname $root_folder)\nset cwd (echo $PWD | sed -e "s|$parent_root_folder/||")\nend\n\necho -n -s " " $directory_color $cwd $normal_color\necho -n -s " on " $repository_color (git_branch_name) $normal_color " "\n\nif git_is_touched\necho -n -s $dirty\nelse\necho -n -s (git_ahead $ahead $behind $diverged $none)\nend\nelse\necho -n -s " " $directory_color $cwd $normal_color\nend\n\necho -n -s " "\nend
  when: 1518542541
- cmd: function fish_prompt\nset -l last_command_status $status\nset -l cwd\n\nif test "$theme_short_path" = 'yes'\nset cwd (basename (prompt_pwd))\nelse\nset cwd (prompt_pwd)\nend\n\nset -l fish "⋊>"\nset -l ahead "↑"\nset -l behind "↓"\nset -l diverged "⥄ "\nset -l dirty "⨯"\nset -l none "◦"\n\nset -l normal_color (set_color normal)\nset -l success_color (set_color $fish_pager_color_progress ^/dev/null; or set_color cyan)\nset -l error_color (set_color $fish_color_error ^/dev/null; or set_color red --bold)\nset -l directory_color (set_color $fish_color_quote ^/dev/null; or set_color brown)\nset -l repository_color (set_color $fish_color_cwd ^/dev/null; or set_color green)\n\nif test $last_command_status -eq 0\necho -n -s $success_color $fish $normal_color\nelse\necho -n -s $error_color $fish $normal_color\nend\n\nif git_is_repo\nif test "$theme_short_path" = 'yes'\nset root_folder (command git rev-parse --show-toplevel ^/dev/null)\nset parent_root_folder (dirname $root_folder)\nset cwd (echo $PWD | sed -e "s|$parent_root_folder/||")\nend\n\necho -n -s " " $directory_color $cwd $normal_color\necho -n -s " on " $repository_color (git_branch_name) $normal_color " "\n\nif git_is_touched\necho -n -s $dirty\nelse\necho -n -s (git_ahead $ahead $behind $diverged $none)\nend\nelse\necho -n -s " " $directory_color $cwd $normal_color\nend\nif set -q VIRTUAL_ENV\n    echo -n -s "in ve " (set_color -b blue white) "(" (basename "$VIRTUAL_ENV") ")" (set_color normal) " "\nend\necho -n -s " "\nend
  when: 1518542611
- cmd: function fish_prompt\nset -l last_command_status $status\nset -l cwd\n\nif test "$theme_short_path" = 'yes'\nset cwd (basename (prompt_pwd))\nelse\nset cwd (prompt_pwd)\nend\n\nset -l fish "⋊>"\nset -l ahead "↑"\nset -l behind "↓"\nset -l diverged "⥄ "\nset -l dirty "⨯"\nset -l none "◦"\n\nset -l normal_color (set_color normal)\nset -l success_color (set_color $fish_pager_color_progress ^/dev/null; or set_color cyan)\nset -l error_color (set_color $fish_color_error ^/dev/null; or set_color red --bold)\nset -l directory_color (set_color $fish_color_quote ^/dev/null; or set_color brown)\nset -l repository_color (set_color $fish_color_cwd ^/dev/null; or set_color green)\n\nif test $last_command_status -eq 0\necho -n -s $success_color $fish $normal_color\nelse\necho -n -s $error_color $fish $normal_color\nend\n\nif git_is_repo\nif test "$theme_short_path" = 'yes'\nset root_folder (command git rev-parse --show-toplevel ^/dev/null)\nset parent_root_folder (dirname $root_folder)\nset cwd (echo $PWD | sed -e "s|$parent_root_folder/||")\nend\n\necho -n -s " " $directory_color $cwd $normal_color\necho -n -s " on " $repository_color (git_branch_name) $normal_color " "\n\nif git_is_touched\necho -n -s $dirty\nelse\necho -n -s (git_ahead $ahead $behind $diverged $none)\nend\nelse\necho -n -s " " $directory_color $cwd $normal_color\nend\nif set -q VIRTUAL_ENV\necho -n -s (set_color -b blue white) "(" (basename "$VIRTUAL_ENV") ")" (set_color normal) " "\nend\necho -n -s " "\nend
  when: 1518543088
- cmd: function fish_prompt\nset -l last_command_status $status\nset -l cwd\n\nif test "$theme_short_path" = 'yes'\nset cwd (basename (prompt_pwd))\nelse\nset cwd (prompt_pwd)\nend\n\nset -l fish "⋊>"\nset -l ahead "↑"\nset -l behind "↓"\nset -l diverged "⥄ "\nset -l dirty "⨯"\nset -l none "◦"\n\nset -l normal_color (set_color normal)\nset -l success_color (set_color $fish_pager_color_progress ^/dev/null; or set_color cyan)\nset -l error_color (set_color $fish_color_error ^/dev/null; or set_color red --bold)\nset -l directory_color (set_color $fish_color_quote ^/dev/null; or set_color brown)\nset -l repository_color (set_color $fish_color_cwd ^/dev/null; or set_color green)\n\nif test $last_command_status -eq 0\necho -n -s $success_color $fish $normal_color\nelse\necho -n -s $error_color $fish $normal_color\nend\n\nif git_is_repo\nif test "$theme_short_path" = 'yes'\nset root_folder (command git rev-parse --show-toplevel ^/dev/null)\nset parent_root_folder (dirname $root_folder)\nset cwd (echo $PWD | sed -e "s|$parent_root_folder/||")\nend\n\necho -n -s " " $directory_color $cwd $normal_color\necho -n -s " on " $repository_color (git_branch_name) $normal_color " "\n\nif git_is_touched\necho -n -s $dirty\nelse\necho -n -s (git_ahead $ahead $behind $diverged $none)\nend\nelse\necho -n -s " " $directory_color $cwd $normal_color\nend\nif set -q VIRTUAL_ENV\necho -n -s " " (set_color -b blue white) "(" (basename "$VIRTUAL_ENV") ")" (set_color normal) " "\nend\necho -n -s " "\nend
  when: 1518543126
- cmd: function fish_prompt --description 'Write out the prompt'\nset -l last_status $status\n\nif not set -q __fish_prompt_normal\nset -g __fish_prompt_normal (set_color normal)\nend\n\n# PWD\nset_color $fish_color_cwd\necho -n (prompt_pwd)\nset_color normal\n\nprintf '%s ' (__fish_git_prompt)\n\nif not test $last_status -eq 0\nset_color $fish_color_error\nend\n\necho -n '$ '\n\nset_color normal\nend
  when: 1518677518
- cmd: function fish_prompt --description 'Write out the prompt'\nset -l last_status $status\n\nif not set -q __fish_prompt_normal\nset -g __fish_prompt_normal (set_color normal)\nend\n\n# PWD\nset_color $fish_color_cwd\necho -n (prompt_pwd)\nset_color normal\n\nprintf '%s ' (__fish_git_prompt)\n\nif not test $last_status -eq 0\nset_color $fish_color_error\nend\nif set -q VIRTUAL_ENV\n    echo -n -s (set_color -b blue white) "(" (basename "$VIRTUAL_ENV") ")" (set_color normal) " "\nend\necho -n '$ '\n\nset_color normal\nend
  when: 1518677525
